-- This file (and others like it) will eventually be generated by reggie

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.gen_utils_pkg.all;
use work.examp_regs_pkg.all; 

entity axi_examp_regs is
    port (
        i_clk : in std_logic;
        i_rst : in std_logic;

        -- Bus Interface
        i_s_axil : in  axil_req_t; 
        o_s_axil : out axil_resp_t;

        -- Register Interface
        o_ctl : out examp_regs_ctl_t;
        i_sts : in  examp_regs_sts_t;

        -- Register R/W Indication Interface
        o_wr : out examp_regs_wr_t;
        o_rd : out examp_regs_rd_t
    );
end entity;

architecture rtl of axi_examp_regs is
    signal axil_req_reg : axil_req_t; 
    signal axil_resp_reg : axil_resp_t;
    signal bus_req  : bus_req_t; 
    signal bus_resp : bus_resp_t;
begin

    u_axil_pipe : entity work.axil_pipe
    generic map (
      G_NUM_STAGES => 1
    )
    port map (
      i_clk    => i_clk,
      i_rst    => i_rst,
      i_s_axil => i_s_axil,
      o_s_axil => o_s_axil,
      i_m_axil => axil_resp_reg,
      o_m_axil => axil_req_reg
    );

    u_axil_to_bus : entity work.axil_to_bus
    port map (
      i_clk    => i_clk,
      i_rst    => i_rst,
      i_s_axil => axil_req_reg,
      o_s_axil => axil_resp_reg,
      i_m_bus  => bus_resp,
      o_m_bus  => bus_req
    );
  
    u_examp_regs : entity work.examp_regs
    port map (
        i_clk   => i_clk,
        i_rst   => i_rst,
        i_s_bus => bus_req,
        o_s_bus => bus_resp,
        o_ctl   => o_ctl,
        i_sts   => i_sts,
        o_wr    => o_wr,
        o_rd    => o_rd
    );

end architecture;

