################################################################################
# << Makefile for Xilinx Vivado Simulation Toolflow >>
################################################################################
# File   : Makefile
# Author : David Gussler
# Date   : 08-06-2022
# Description:
#   I'm very grateful to the author of this series of blog posts for doing 90%
#   of the work. Please check out his original guides:
#   https://www.itsembedded.com/dhd/vivado_sim_1/
#
#   This is a system for running the Xilinx simulation tools from the command 
#   line rather than dealing with the sluggish Vivado GUI.
#
#   Compiles all VHDL files as VHDL'08
#  	Compiles all Verilog files as as SystemVerilog
#   	Since these new language standards are bacwards compatible, this should 
#       not cause any issues unless code on an older standard uses a keyword
#       that is reserved in a newer standard. 
#
#   Regarding Xilinx IP and Block Diagrams... its what we call...
#   an absolute pain in the *** to simulate Xilinx IP outside of the GUI
#   (at least in a general way). It can be done, but I'm not doing it here. 
#   The quickest way to simulate a block design on the command line would be 
#   to create a Vivado project, run the "export_simulation" tcl command,
#   and run their generated bash script. Maybe one day I'll get around to adding
#   a "general solution" for this that can read a generate_bd.tcl file and
#   automatically add the proper verilog / vhdl source files and precompiled 
#   libraries, but its going to be a non-trivial ammount of work. 
#   To "manually" simulate xilinx IP using this makefile systen, you need to add 
#   the generated verilog or vhdl files to SOURCES_VHDL/SV and/or may need to
#
#   add the "-L <precompiled_library>" as an elab option. Lastly, you may need 
#   to add "glbl.v" as a verilog source. This file is available at  
#   "$XILINX/verilog/src/glbl.v"
#
################################################################################

################################################################################
# Start User Edit Region
################################################################################

# ==== Top Level Module for Simulation ==== #
TB_TOP := example_and_tb

# ==== Source Files ==== #
# VHDL source files (*.vhd, *.vhdl); Accepts vhdl 2008 files as well
SOURCES_VHDL += ../../src/hdl/example_and.vhd 
SOURCES_VHDL +=	../../src/tb/example_and_tb.vhd

# Verilog and SystemVerilog files (*.v, *.vh, *.sv, *.svh)
SOURCES_SV   := 


# ==== Extra Elaboration Options ====
ELAB_OPTS := --debug all --relax
# --generic_top "P1=10" --O2 --L <precompiled_library>

# ==== Extra Compile Options ==== #
COMP_OPTS_VHDL := --incr --relax 
COMP_OPTS_SV   := --incr --relax 

################################################################################
# End User Edit Region
################################################################################


# ==== Help ==== #
.PHONY : help
help : 
	@echo "=== Vivado Simulator Make Interface ==="
	@echo "Options:"
	@echo "    make help  - This menu"
	@echo "    make sim   - Simulate design"
	@echo "    make wave  - Simulate design and open the Vivado waveform viewer GUI"
	@echo "    make elab  - Elaborate design"
	@echo "    make comp  - Compile design"
	@echo "    make clean - Delete files generated by Vivado and this build system"


# ==== Simulate ==== #
# Open Waveform in the Vivado GUI 
.PHONY : wave
wave : $(TB_TOP)_snapshot.wdb
	@echo
	@echo "### OPENING WAVES ###"
	xsim -gui $(TB_TOP)_snapshot.wdb &

# Simulate without the GUI 
$(TB_TOP)_snapshot.wdb : .elab.timestamp
	@echo
	@echo "### RUNNING SIMULATION ###"
	xsim $(TB_TOP)_snapshot -tclbatch xsim_cfg.tcl

# Phony rule the user can call for simulating w/o the gui
.PHONY : sim
sim : $(TB_TOP)_snapshot.wdb


# ==== Elaborate ==== #
# Phony rule the user can run to elaborate
.PHONY : elab
elab : .elab.timestamp

# Elaborate the compiled object files 
.elab.timestamp : .comp_sv.timestamp .comp_vhdl.timestamp
	@echo
	@echo "### ELABORATING ###"
	xelab  $(ELAB_OPTS) -top $(TB_TOP) -snapshot $(TB_TOP)_snapshot
	touch .elab.timestamp


# ==== Compile ==== #
# Phony rule that the user can run to compile
.PHONY : comp
comp : .comp_sv.timestamp  .comp_vhdl.timestamp

# Compile Verilog / SystemVerilog
ifeq ($(SOURCES_SV),)
.comp_sv.timestamp :
	@echo
	@echo "### NO VERILOG SOURCES GIVEN ###"
	@echo "### SKIPPING VERILOG COMPILATION ###"
	touch .comp_sv.timestamp
else
.comp_sv.timestamp : $(SOURCES_SV)
	@echo
	@echo "### COMPILING SYSTEMVERILOG ###"
	xvlog --sv $(COMP_OPTS_SV) $(SOURCES_SV) 2>&1 | tee compile.log
	touch .comp_sv.timestamp
endif

# Compile VHDL
ifeq ($(SOURCES_VHDL),)
.comp_vhdl.timestamp :
	@echo
	@echo "### NO VHDL SOURCES GIVEN ###"
	@echo "### SKIPPING VHDL COMPILATION ###"
	touch .comp_vhdl.timestamp
else
.comp_vhdl.timestamp : $(SOURCES_VHDL)
	@echo
	@echo "### COMPILING VHDL ###"
	xvhdl --2008 $(COMP_OPTS_VHDL) $(SOURCES_VHDL) 2>&1 | tee compile.log
	touch .comp_vhdl.timestamp
endif


# ==== Clean ==== #
.PHONY : clean
clean :
	@rm -rf *.jou *.log *.pb *.wdb xsim.dir .Xil *.str  
	@rm -rf .*.timestamp ./xsim
	@echo
	@echo "### CLEANED WORKSPACE ###"
	@echo
	